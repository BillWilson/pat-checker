services:
  web:
    build:
      context: web
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_HOST=http://localhost:8000
    restart: unless-stopped
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  app:
    build:
      context: api
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=local
      - DB_PASSWORD=root
      - APP_KEY=base64:/fIDJnxoB11lwbIdM8Q7LmDZzrgJvbuTs3H3uX/eoTY=
      - APP_ENV=production
    depends_on:
      - db
    working_dir: /var/www/html
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    image: pgvector/pgvector:pg16
    platform: linux/arm64
    environment:
      - POSTGRES_USER=local
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=laravel
      - PGDATA=/var/lib/postgresql/data/db-files/
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./.deploy/postgres/vector_extension.sql:/docker-entrypoint-initdb.d/0-vector_extension.sql
    ports:
      - "54321:5432"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
