# nginx.conf
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_min_length 256;

    # Security Headers
    server_tokens off;

    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Cache static files
        location /_next/static {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }

        location /static {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }

        # Cache images
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }

        # Cache fonts
        location ~* \.(woff|woff2|ttf|otf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }

        # Cache CSS and JavaScript
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }

        # Health check endpoint
        location = /health.txt {
            access_log off;
            return 200 'healthy\n';
            add_header Content-Type text/plain;
        }

        # Handle 404
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # Handle other routes
        location / {
            try_files $uri $uri.html $uri/index.html =404;
            expires 1h;
            add_header Cache-Control "public, no-cache";
        }
    }
}
